{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar isFunction = require( '@stdlib/assert-is-function' );\n\n\n// MAIN //\n\n/**\n* Tests whether an input value is a supported ndarray struct data type.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether an input value is a supported ndarray struct data type\n*\n* @example\n* var structFactory = require( '@stdlib/dstructs-struct' );\n*\n* var Struct = structFactory([\n*     {\n*         'name': 'foo',\n*         'type': 'float64'\n*     }\n* ]);\n*\n* var bool = isStructDataType( Struct );\n* // returns true\n*\n* bool = isStructDataType( 'binary' );\n* // returns false\n*\n* bool = isStructDataType( 'float32' );\n* // returns false\n*\n* bool = isStructDataType( 'float64' );\n* // returns false\n*\n* bool = isStructDataType( 'generic' );\n* // returns false\n*\n* bool = isStructDataType( 'int16' );\n* // returns false\n*\n* bool = isStructDataType( 'int32' );\n* // returns false\n*\n* bool = isStructDataType( 'int8' );\n* // returns false\n*\n* bool = isStructDataType( 'uint16' );\n* // returns false\n*\n* bool = isStructDataType( 'uint32' );\n* // returns false\n*\n* bool = isStructDataType( 'uint8' );\n* // returns false\n*\n* bool = isStructDataType( 'uint8c' );\n* // returns false\n*\n* bool = isStructDataType( 'foo' );\n* // returns false\n*/\nfunction isStructDataType( value ) {\n\treturn (\n\t\tisFunction( value ) &&\n\t\tisPositiveInteger( value.alignment ) &&\n\t\tisPositiveInteger( value.byteLength ) &&\n\t\tisFunction( value.byteLengthOf ) &&\n\t\tisFunction( value.byteOffsetOf ) &&\n\t\tisFunction( value.bufferOf ) &&\n\t\tisFunction( value.viewOf )\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isStructDataType;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test whether an input value is a supported ndarray struct data type.\n*\n* @module @stdlib/ndarray-base-assert-is-struct-data-type\n*\n* @example\n* var structFactory = require( '@stdlib/dstructs-struct' );\n* var isStructDataType = require( '@stdlib/ndarray-base-assert-is-struct-data-type' );\n*\n* var Struct = structFactory([\n*     {\n*         'name': 'foo',\n*         'type': 'float64'\n*     }\n* ]);\n*\n* var bool = isStructDataType( Struct );\n* // returns true\n*\n* bool = isStructDataType( 'binary' );\n* // returns false\n*\n* bool = isStructDataType( 'float32' );\n* // returns false\n*\n* bool = isStructDataType( 'float64' );\n* // returns false\n*\n* bool = isStructDataType( 'generic' );\n* // returns false\n*\n* bool = isStructDataType( 'int16' );\n* // returns false\n*\n* bool = isStructDataType( 'int32' );\n* // returns false\n*\n* bool = isStructDataType( 'int8' );\n* // returns false\n*\n* bool = isStructDataType( 'uint16' );\n* // returns false\n*\n* bool = isStructDataType( 'uint32' );\n* // returns false\n*\n* bool = isStructDataType( 'uint8' );\n* // returns false\n*\n* bool = isStructDataType( 'uint8c' );\n* // returns false\n*\n* bool = isStructDataType( 'foo' );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAoB,QAAS,oCAAqC,EAAE,YACpEC,EAAa,QAAS,4BAA6B,EA4DvD,SAASC,EAAkBC,EAAQ,CAClC,OACCF,EAAYE,CAAM,GAClBH,EAAmBG,EAAM,SAAU,GACnCH,EAAmBG,EAAM,UAAW,GACpCF,EAAYE,EAAM,YAAa,GAC/BF,EAAYE,EAAM,YAAa,GAC/BF,EAAYE,EAAM,QAAS,GAC3BF,EAAYE,EAAM,MAAO,CAE3B,CAKAJ,EAAO,QAAUG,ICpBjB,IAAIE,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isPositiveInteger", "isFunction", "isStructDataType", "value", "main"]
}
